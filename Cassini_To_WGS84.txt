
-- Android.Java--
__Cassini To WGS84__               

Eng.Yousef Salem Alassyat
assyat2@gmail.com
0795065496
-------------------------------------------------------------
--- الحقوق غير محفوظة ويجوز استعمال هذا الملف و التعديل و النسخ و اللصق علية ---
--------------------------------------------------------------
               double a1;
                double a2;
                double a3;
                double a4;
                double a5;
                double a6;
                double a7;
                double a8;
                double a9;
                double a10;
                double a11;
                double a12;
                double a13;
                double Ox;
                double M1;
                double T1;
                double D;
                double v1;
                double p1;
                double e1;
                double u1;
                double M0;
                double a101;
                double b2;
                double b4;
                double b6;
                double cc;
                double x;
                double y;
                double z;
                double x1;
                double y1;
                double z1;
                double lu;
                double lo;
                double lat;
                double lon;
                double e3;
                double No = No8;
                double Ea = Ea8;
                a101 = 31.7340969444444;

                M0 = 6378300.789 * (1 - 0.006803481) * 1.005135373 * (a101 * 0.0174532925) + 6378300.789 * (1 - 0.006803481) * (-0.002573165) * Math.sin(2 * a101 * 0.0174532925) + 6378300.789 * (1 - 0.006803481) * 0.00000274473 * Math.sin(4 * a101 * 0.0174532925) + 6378300.789 * (1 - 0.006803481) * -0.0000000036434 * Math.sin(6 * a101 * 0.0174532925)+6378300.789 * (1 - 0.006803481)*5.24536E-12 * Math.sin(8 * a101 * 0.0174532925)+6378300.789 * (1 - 0.006803481)*(-7.70689E-15) * Math.sin(10* a101 * 0.0174532925);

                M1 = M0 + (No - 1126867.909);
                u1 = M1 / (6378300.789 * (1 - 0.006803481) * 1.005135373);
                e1 = (1 - Math.pow((1 - 0.006803481), 0.5)) / (1 + Math.pow((1 - 0.006803481), 0.5));

                Ox = u1 + (3 * e1 / 2 - 27 * Math.pow(e1, 3) / 32) * Math.sin(2 * u1) + (21 * Math.pow(e1, 2) / 16 - 55 * Math.pow(e1, 4) / 32) * Math.sin(4 * u1) + (151 * Math.pow(e1, 3) / 96) * Math.sin(6 * u1) + (1097 * Math.pow(e1, 4) / 512) * Math.sin(8 * u1);

                v1 = 6378300.789 / Math.pow((1 - 0.006803481 * Math.pow(Math.sin(Ox), 2)), 0.5);
                p1 = 6378300.789 * (1 - 0.006803481) / Math.pow((1 - 0.006803481 * Math.pow(Math.sin(Ox), 2)), 1.5);
                T1 = Math.pow(Math.tan(Ox), 2);
                D = (Ea - 170251.555) / v1;
                lu = (Ox - (v1 * Math.tan(Ox) / p1) * (Math.pow(D, 2) / 2 - (1 + 3 * T1) * Math.pow(D, 4) / 24)) / 0.0174532925;
                lo = (35.2120805555555 * 0.0174532925 + (D - T1 * Math.pow(D, 3) / 3 + (1 + 3 * T1) * T1 * Math.pow(D, 5) / 15) / Math.cos(Ox)) / 0.0174532925;


                x = 6384311.9 * Math.cos(lu * 0.0174532925) * Math.cos(lo * 0.0174532925);
                y = 6384311.9 * Math.cos(lu * 0.0174532925) * Math.sin(lo * 0.0174532925);
                z = (6384311.9 * 0.9931965192) * Math.sin(lu * 0.0174532925);

                a1 = 0.99998722 * x;
                a2 = 0.99998722 * y;
                a3 = 0.99998722 * z;

                a4 = 1 * a1 + 0.00005731 * a2 + (-0.00002143) * a3;
                a5 = (-0.00005731) * a1 + 1 * a2 + 0.00003879 * a3;
                a6 = 0.00002143 * a1 + (-0.00003879) * a2 + 1 * a3;

                a7 = a4 + (-275.722);
                a8 = a5 + 94.7824;
                a9 = a6 + 340.894;

                a10 = (Math.atan((a9 / Math.pow((Math.pow(a7, 2) + Math.pow(a8, 2)), (0.5))) / (1 - Math.pow((0.081819191), 2)))) / 0.01745329252;

                a11 = (Math.atan(a8 / a7)) / 0.01745329252;

                tv2.setText("Latitude: " + a10);

                tv3.setText("Longitude: " + a11);
                tv4.setText("تم التحويل الى WGS_84");

                LatLng location;
                location = new LatLng(a10, a11);

                Marker melbourne = mMap.addMarker(new MarkerOptions()
                        .position(location)
                        .title("Lat: "+a10+
                                ","+"Lng: "+a11));
                melbourne.showInfoWindow();
                mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(location, 14));